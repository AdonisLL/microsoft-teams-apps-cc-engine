name: Deploy CC Prep Function 

on:
  [push]

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_FUNCTIONAPP_NAME: cc-app75u4uijj2mhu4-prep-function  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './Source/CompanyCommunicator.Prep.Func'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.*'              # set this to the dotnet version to use


jobs:

 build-function:
      runs-on: ubuntu-latest
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish Functions
        run: dotnet publish ./Source/CompanyCommunicator.Prep.Func/Microsoft.Teams.Apps.CompanyCommunicator.Prep.Func.csproj --configuration Release --output ${{ env.OUTPUT_PATH }}

      - name: Package Functions
        uses: actions/upload-artifact@v3
        with:
          name: functions
          path: ${{ env.OUTPUT_PATH }}
 
 

 deploy:
      runs-on: ubuntu-latest
      needs: [build-function]
      env:
        FUNC_APP_NAME: ${{ env.AZURE_FUNCTIONAPP_NAME }}
      steps:
        - name: Download Artifact
          uses: actions/download-artifact@v1
          with:
            name: functions
            path: ${{ env.OUTPUT_PATH }}

        - name: "Login via Azure CLI"
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Deploy Function to Azure
          uses: Azure/functions-action@v1
          with:
            app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
            package:  ${{ env.OUTPUT_PATH }}



# jobs:
#   build-and-deploy:
#     runs-on: windows-latest
#     environment: dev
#     steps:
#     - name: 'Checkout GitHub Action'
#       uses: actions/checkout@master

#     - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: ${{ env.DOTNET_VERSION }}

#     - name: 'Resolve Project Dependencies Using Dotnet'
#       shell: pwsh
#       run: |
#         pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
#         dotnet build --configuration Release --output ./output
#         popd

#     - name: 'Run Azure Functions Action'
#       uses: Azure/functions-action@v1
#       id: fa
#       with:
#         app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
#         package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
#         publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples